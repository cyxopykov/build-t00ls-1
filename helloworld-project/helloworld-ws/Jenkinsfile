pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "mvn3"
    }

    stages {
        stage('Package') {
            steps {
                // Get some code from a GitHub repository
                git branch: 'asukharukau-final-task', url: 'https://github.com/cyxopykov/build-t00ls-1.git'

                // Run Maven on a Unix agent.
                dir('helloworld-project/helloworld-ws/') {
                  sh 'mvn -Dmaven.test.failure.ignore=true clean package'
                }

            }
       }
       
       stage('Building image') {
            steps{
                sh '''
                    docker build -f helloworld-project/helloworld-ws/Dockerfile -t 192.168.56.2:5000/helloworld-asukharukau:rc-$BUILD_NUMBER -t 192.168.56.2:5000/helloworld-asukharukau:latest .
                    docker login -u ${nexus_user} -p ${nexus_password} 192.168.56.2:5000
                    docker push 192.168.56.2:5000/helloworld-asukharukau:rc-$BUILD_NUMBER
                    docker push 192.168.56.2:5000/helloworld-asukharukau:latest
                '''
            }
        }
        
                
        stage('Deploy App') {
          steps {
                           
              script {
                    withKubeConfig([credentialsId: 'minikubeconfig']) {
                        sh '''
                            sed -i -e "s,<IMAGE>,192.168.56.2:5000/helloworld-asukharukau:rc-$BUILD_NUMBER,g" ./helloworld-project/helloworld-ws/deploy.yaml
                            kubectl apply -f ./helloworld-project/helloworld-ws/deploy.yaml
                        '''
                    }
                }
          }
        }
        
        
        
    }
}
    

    
